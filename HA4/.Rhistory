ylab='number of oligos with x mismatches')
boxplot(oligo1[,60:100],
col='green',
pars=list(outcol='red'),
main='All Probes, 60 to 100 mismatches',
xlab='number of mismatches',
ylab='number of oligos with x mismatches')
boxplot(oligo1[,61:101],
col='green',
pars=list(outcol='red'),
main='All Probes, 60 to 100 mismatches',
xlab='number of mismatches',
ylab='number of oligos with x mismatches')
#Plotting for the probes with 60-100 mismatches
boxplot(oligo1[,59:101],
col='green',
pars=list(outcol='red'),
main='All Probes, 58 to 100 mismatches',
xlab='number of mismatches',
ylab='number of oligos with x mismatches')
print(N1)
print('The number of the sequences that have only one perfect match'length(which(oligo1 [,1] == 1)))
print('The number of the sequences that have only one perfect match' length(which(oligo1 [,1] == 1)))
print('The number of the sequences that have only one perfect match' (length(which(oligo1 [,1] == 1))))
print((length(which(oligo1 [,1] == 1))))
print((length(which(oligo1 [,1] > 1))))
boxplot(which(oligo1 [,1] == 1),
col='green',
pars=list(outcol='red')
main='Probes that have only one perfect match',
xlab='number of mismatches',
ylab='xxx')
boxplot(which(oligo1 [,1] == 1),
col='green',
pars=list(outcol='red'),
main='Probes that have only one perfect match',
xlab='number of mismatches',
ylab='xxx')
plot?
?plot
?barplot
P = read.table("C:/Users/isoch/Desktop/123.xlsx",header=FALSE,sep=",",row.names=1)
View(P)
View(P)
P = read.table("C:/Users/isoch/Desktop/123.xlsx",sheet=1)
length(which(oligo1 [,1] > 1))
'1PMO'
'MT1PMO'
PMOMT1 = length(which(oligo1 [,1] > 1))
read.table("C:/Users/isoch/Desktop/123.csv",header=FALSE,sep=",",row.names=1)
View(P)
C = read.table("C:/Users/isoch/Desktop/123.csv",header=FALSE,sep=",",row.names=1)
View(C)
View(oligo1)
View(C)
View(C)
View(C)
View(C)
C = read.table("C:/Users/isoch/Desktop/123.csv",header=FALSE,sep=",",row.names=0)
C = read.table("C:/Users/isoch/Desktop/123.csv",header=FALSE,sep=",",row.names=1)
D = read.table("C:/Users/isoch/Desktop/123.csv",header=FALSE,sep=",",row.names=1)
View(D)
list(oneperfectmatchprobe = PMO1, morethanoneperfectmatchprobe = PMOMT1)
list(oneperfectmatchprobe = 19526, morethanoneperfectmatchprobe = 399)
Probe = list(oneperfectmatchprobe = 19526, morethanoneperfectmatchprobe = 399)
View(Probe)
plot(Probe)
Probe$oneperfectmatchprobe
plot(Probe)
View(Probe)
Probe1 = list(Number_of_matched_Sequence(1,'more than 1'), Quantity(19526,399))
?boxplot
boxplot(oligo1[,1],
col='green',
pars=list(outcol='red'),
main='All Probes, 58 to 100 mismatches',
xlab='number of mismatches',
ylab='number of oligos with x mismatches')
boxplot(oligo1[,1],
+         col='green',
+         pars=list(outcol='red'),
+         main='All Probes, 58 to 100 mismatches',
+         xlab='number of mismatches',
+         ylab='number of oligos with x mismatches', horizontal = TRUE)
print('The number of oligos with more than one perfect match is 399')
print('The number of oligos with only one perfect match is 19526')
print('The number of oligos with only one perfect match is 19526')
result = read.csv("C:/Users/isoch/Desktop/234.csv")
View(result)
head(result)
barplot(table(oligo1$V2))
?barplot
barplot(table(oligo1$V2),
main = 'Oligos with Different Numbers of Perfect Match',
xlab = 'Numbers of Perfect Match',
ylab = 'Numbers of Probes',
xlim = 20 ,
ylim = 20000 ,
)
barplot(table(oligo1$V2),
main = 'Oligos with Different Numbers of Perfect Match',
xlab = 'Numbers of Perfect Match',
ylab = 'Numbers of Probes',
)
oligo2 = read.table("C:/Users/isoch/Desktop/OligoHitsums2.csv",header=FALSE,sep=",",row.names=1)
OligoHitsums2 <- read.csv("C:/Users/isoch/Desktop/OligoHitsums2.csv", header=FALSE)
View(OligoHitsums2)
View(oligo2)
View(oligo2)
View(oligo2)
View(oligo2)
View(oligo2)
View(oligo2)
dim(oligo2)
#Plotting for the whole
boxplot(oligo2,
col='green',
pars=list(outcol='red'),
main='All probes',
xlab='number of mismatches',
ylab='number of oligos with x mismatches')
#Plotting for the probes with 60-100 mismatches
boxplot(oligo2[,34:61],
col='green',
pars=list(outcol='red'),
main='All Probes, 33 to 58 mismatches',
xlab='number of mismatches',
ylab='number of oligos with x mismatches')
length(which(oligo1 [,1] == 1))
length(which(oligo2 [,1] == 1))
length(which(oligo2 [,1] > 1))
barplot(table(oligo2$V2),
main = 'Oligos with Different Numbers of Perfect Match',
xlab = 'Numbers of Perfect Match',
ylab = 'Numbers of Probes',
)
setwd(C:/Users/isoch/Google 云端硬盘/Study/1. Semester an Uni-Tuebingen/Microarray Bioinformatik/HA4)
setwd('C:/Users/isoch/Google 云端硬盘/Study/1. Semester an Uni-Tuebingen/Microarray Bioinformatik/HA4')
read.table(affy_data.tsv)
read.table('affy_data.tsv')
ad <- read.table('affy_data.tsv')
View(ad)
# Load Libraries
library(ggplot2)
library(gplots)
install.packages("gplots")
library(gplots)
library(gplots)
install.packages("zoo")
install.packages("cluster")
install.packages("gplots")
library(gplots)
dim(ad)
ad <- read.table(file=file.choose(), header = T, sep = "\t", stringsAsFactors = T)
View(ad)
affydata <- ad[1:54851,]
View(affydata)
plot(affydata)
ad <- read.table(file=file.choose(), row.names = 1, header = T, sep = "\t", stringsAsFactors = T)
View(ad)
affydata <- ad[1:54851,]
View(affydata)
# Draw scatter plot data column 1 vs column 2
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P002.CEL, pch=20)
# Draw scatter plot data column 1 vs column 2
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P002.CEL)
# Draw scatter plot data column 1 vs column 2
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P002.CEL, pch=20)
# add lines
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
?abline
def.off()
dev.off()
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P002.CEL, pch=20)
# add lines
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
affydatalog2 <- log2(affydata)
View(affydatalog2)
?mfcol
?par
# Combine plots
par(mfcol=c(2,3))
par(mfcol=c(2,3))
# Draw scatter plot data column 1 vs column 2
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P002.CEL, pch=20)
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P005.CEL, pch=20)
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P0011.CEL, pch=20)
plot(affydata$E13R021_P002.CEL, affydata$E13R021_P005.CEL, pch=20)
plot(affydata$E13R021_P002.CEL, affydata$E13R021_P0011.CEL, pch=20)
plot(affydata$E13R021_P005.CEL, affydata$E13R021_P0011.CEL, pch=20)
# add lines
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
# Logtransform
affydatalog2 <- log2(affydata)
# Remove all the plots
dev.off()
# Draw scatter plot data column 1 vs column 2
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P002.CEL, pch=20)
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P005.CEL, pch=20)
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P0011.CEL, pch=20)
plot(affydata$E13R021_P002.CEL, affydata$E13R021_P005.CEL, pch=20)
plot(affydata$E13R021_P002.CEL, affydata$E13R021_P0011.CEL, pch=20)
plot(affydata$E13R021_P005.CEL, affydata$E13R021_P0011.CEL, pch=20)
# add lines
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
# Combine plots
par(mfcol=c(2,3))
# Draw scatter plot data column 1 vs column 2
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P002.CEL, pch=20)
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P005.CEL, pch=20)
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P0011.CEL, pch=20)
plot(affydata$E13R021_P002.CEL, affydata$E13R021_P005.CEL, pch=20)
plot(affydata$E13R021_P002.CEL, affydata$E13R021_P0011.CEL, pch=20)
plot(affydata$E13R021_P005.CEL, affydata$E13R021_P0011.CEL, pch=20)
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P0011.CEL, pch=20)
plot(affydata[,1], affydata[,4], pch=20)
# Combine plots
par(mfcol=c(2,3))
# Draw scatter plot data column 1 vs column 2
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P002.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P005.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata[,1], affydata[,4], pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata$E13R021_P002.CEL, affydata$E13R021_P005.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata[,2], affydata$E13R021_P0011.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata[,3], affydata$E13R021_P0011.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata[,3], affydata[,4], pch=20)
par(mfcol=c(2,3))
# Draw scatter plot data column 1 vs column 2
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P002.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P005.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata[,1], affydata[,4], pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata$E13R021_P002.CEL, affydata$E13R021_P005.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata[,2], affydata[,4], pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata[,3], affydata[,4], pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
# add lines
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
setwd('C:/Users/isoch/Google 云端硬盘/Study/1. Semester an Uni-Tuebingen/Microarray Bioinformatik/HA4')
ad <- read.table(file=file.choose(), row.names = 1, header = T, sep = "\t", stringsAsFactors = T)
affydata <- ad[1:54851,]
# Load Libraries
library(ggplot2)
library(gplots)
# Combine plots
par(mfcol=c(2,3))
# Draw scatter plot data column 1 vs column 2
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P002.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P005.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata[,1], affydata[,4], pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata$E13R021_P002.CEL, affydata$E13R021_P005.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata[,2], affydata[,4], pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata[,3], affydata[,4], pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
# add lines
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
# Logtransform
affydatalog2 <- log2(affydata)
# Remove all the plots
dev.off()
setwd('C:/Users/isoch/Google 云端硬盘/Study/1. Semester an Uni-Tuebingen/Microarray Bioinformatik/HA4')
ad <- read.table(file=file.choose(), row.names = 1, header = T, sep = "\t", stringsAsFactors = T)
affydata <- ad[1:54851,]
# Load Libraries
library(ggplot2)
library(gplots)
# Combine plots
par(mfcol=c(2,3))
# Draw scatter plot data column 1 vs column 2
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P002.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P005.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata[,1], affydata[,4], pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata$E13R021_P002.CEL, affydata$E13R021_P005.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata[,2], affydata[,4], pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata[,3], affydata[,4], pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
# add lines
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
# Logtransform
affydatalog2 <- log2(affydata)
View(affydatalog2)
# Produce scatterplots of the log-transformed expression values of each pair of arrays.
plot(affydatalog2$E13R021_P001.CEL, affydatalog2$E13R021_P002.CEL, pch=20)
abline(a=5, b=1, col='blue',lwd=5, lty=3)
abline(a=-5, b=1, col='blue',lwd=5, lty=3)
abline(a=4, b=1, col='red',lwd=3, lty=2)
abline(a=1, b=1, col='blue',lwd=5, lty=3)
abline(a=-1, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydatalog2$E13R021_P001.CEL, affydatalog2$E13R021_P002.CEL, pch=20)
abline(a=1, b=1, col='blue',lwd=5, lty=3)
abline(a=-1, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydatalog2$E13R021_P001.CEL, affydatalog2$E13R021_P005.CEL, pch=20)
abline(a=1, b=1, col='blue',lwd=5, lty=3)
abline(a=-1, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydatalog2$E13R021_P001.CEL, affydatalog2$E13R021_P011.CEL, pch=20)
abline(a=1, b=1, col='blue',lwd=5, lty=3)
abline(a=-1, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydatalog2$E13R021_P002.CEL, affydatalog2$E13R021_P005.CEL, pch=20)
abline(a=1, b=1, col='blue',lwd=5, lty=3)
abline(a=-1, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydatalog2$E13R021_P002.CEL, affydatalog2$E13R021_P011.CEL, pch=20)
abline(a=1, b=1, col='blue',lwd=5, lty=3)
abline(a=-1, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydatalog2$E13R021_P005.CEL, affydatalog2$E13R021_P011.CEL, pch=20)
abline(a=1, b=1, col='blue',lwd=5, lty=3)
abline(a=-1, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
par(mfcol=c(2,3))
# Produce pairwise scatterplots of the primary expression values of each pair of arrays
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P002.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P005.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata$E13R021_P001.CEL, affydata$E13R021_P011.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata$E13R021_P002.CEL, affydata$E13R021_P005.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata$E13R021_P002.CEL, affydata$E13R021_P011.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydata$E13R021_P005.CEL, affydata$E13R021_P011.CEL, pch=20)
abline(a=2500, b=1, col='blue',lwd=5, lty=3)
abline(a=-2500, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydatalog2$E13R021_P001.CEL, affydatalog2$E13R021_P002.CEL, pch=20)
abline(a=1, b=1, col='blue',lwd=5, lty=3)
abline(a=-1, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydatalog2$E13R021_P001.CEL, affydatalog2$E13R021_P005.CEL, pch=20)
abline(a=1, b=1, col='blue',lwd=5, lty=3)
abline(a=-1, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydatalog2$E13R021_P001.CEL, affydatalog2$E13R021_P011.CEL, pch=20)
abline(a=1, b=1, col='blue',lwd=5, lty=3)
abline(a=-1, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydatalog2$E13R021_P002.CEL, affydatalog2$E13R021_P005.CEL, pch=20)
abline(a=1, b=1, col='blue',lwd=5, lty=3)
abline(a=-1, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydatalog2$E13R021_P002.CEL, affydatalog2$E13R021_P011.CEL, pch=20)
abline(a=1, b=1, col='blue',lwd=5, lty=3)
abline(a=-1, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
plot(affydatalog2$E13R021_P005.CEL, affydatalog2$E13R021_P011.CEL, pch=20)
abline(a=1, b=1, col='blue',lwd=5, lty=3)
abline(a=-1, b=1, col='blue',lwd=5, lty=3)
abline(a=0, b=1, col='red',lwd=3, lty=2)
?quickplot
quickplot(affydatalog2$E13R021_P001.CEL, affydatalog2$E13R021_P002.CEL)
library(affy)
source("https://bioconductor.org/biocLite.R")
biocLite("affy")
library(affy)
library(affy)
if (require(affydata))
{
data(affydatalog2)
}
y1 <- (exprs(affydatalog2)[, c(affydatalog2$E13R021_P001.CEL, affydatalog2$E13R021_P002.CEL)])
x11()
ma.plot( rowMeans(y1), (y[, 1])-(y[, 2]), cex=1 )
title("Dilutions Dataset (array 20B v 10A)")
library(affy)
if (require(affydata))
{
data(affydatalog2)
}
y1 <- (exprs(affydatalog2)[, c(affydatalog2$E13R021_P001.CEL, affydatalog2$E13R021_P002.CEL)])
x11()
ma.plot( rowMeans(y1), (y1[, 1])-(y1[, 2]), cex=1 )
title("Dilutions Dataset (array 20B v 10A)")
library(affy)
if (require(affydata))
{
data(affydatalog2)
}
y1 <- (exprs(affydatalog2)[, c(affydatalog2$E13R021_P001.CEL, affydatalog2$E13R021_P002.CEL)])
x11()
ma.plot( rowMeans(y1), (y1[, 1])-(y1[, 2]), cex=1 )
title("123")
library(affy)
if (require(affydata))
{
data(affydatalog2)
}
y1 <- (exprs(affydatalog2)[, c(affydatalog2$E13R021_P001.CEL, affydatalog2$E13R021_P002.CEL)])
x11()
ma.plot( rowMeans(y1), (y1[, 1])-(y1[, 2]), cex=1 )
# Produce MA Plots
library(affy)
if (require(affydata))
{
data(affydatalog2)
}
y1 <- (exprs(affydatalog2)[, c(affydatalog2$E13R021_P001.CEL, affydatalog2$E13R021_P002.CEL)])
x11()
ma.plot( rowMeans(y1), (y1[, 1])-(y1[, 2]), cex=1 )
library(affy)
if (require(affydata))
{
data(affydatalog2)
}
y1 <- (exprs(affydatalog2)[, c(affydatalog2$E13R021_P001.CEL, affydatalog2$E13R021_P002.CEL)])
x11()
ma.plot( rowMeans(y1), y1[, 1]-y1[, 2], cex=1 )
?rowMeans
affydatalog2
affydatalog2[,c(1,3)]
ma.plot(rowMeans(affydatalog2[,c(1,2)]), affydatalog2[,1] - affydatalog2[,2], cex = 1)
ma.plot(rowMeans(affydatalog2[,c(1,3)]), affydatalog2[,1] - affydatalog2[,3], cex = 1)
ma.plot(rowMeans(affydatalog2[,c(1,4)]), affydatalog2[,1] - affydatalog2[,4], cex = 1)
ma.plot(rowMeans(affydatalog2[,c(2,3)]), affydatalog2[,2] - affydatalog2[,3], cex = 1)
ma.plot(rowMeans(affydatalog2[,c(2,4)]), affydatalog2[,2] - affydatalog2[,4], cex = 1)
ma.plot(rowMeans(affydatalog2[,c(3,4)]), affydatalog2[,3] - affydatalog2[,4], cex = 1)
