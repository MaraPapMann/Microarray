tMAQ <- t(MAQ)
View(tMAQ)
View(tAQ)
AQ <- as.data.frame(read.table("ArrayQuality.tsv", header = TRUE, row.names = NULL))
MAQ <- aggregate(AQ[,-1],list(AQ[,1]), median)
tAQ <- t(AQ)
tMAQ <- t(MAQ)
View(tMAQ)
View(tAQ)
t(replicate(2,MAQ[,1:2]))
t(replicate(2,MAQ[,2:3]))
b <- t(replicate(2,MAQ[,2:3]))
View(b)
?aggregate
?apply(array, margin, ...)
?sapply
v <- [1,2,3,4,5]
v <- 1:10
v
v[,-1]
v <- matrix(1:10, 2, 5)
v
v[,-1]
v[,-2]
[,-1:2]
v[,-1:2]
v[,-1:-2]
library(magrittr)
library(plotly, quietly = T)
setwd("C:/Users/isoch/Google 云端硬盘/Study/1. Semester an Uni-Tuebingen/Microarray Bioinformatik/HA3")
AQ <- read.delim("ArrayQuality.tsv")
splitted <- split(AQ, AQ$Identifier)
RLE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
med <- apply(dt, 1, median)
res <- dt - med
}, simplify = F)
IQR <- sapply(names(splitted), function(n) {
dt <- RLE[[n]]
quantiles <- apply(dt, 2, quantile)
iqr <- quantiles[4,] - quantiles[2,]
}) %>% t
MED <- sapply(names(splitted), function(n) {
dt <- RLE[[n]]
med <- apply(dt, 2, median)
}) %>% t
# plot
MED = data.frame(MED)
MED.stack <- stack(MED)
pt <- ggplot(MED.stack) +
geom_boxplot(aes(x=ind, y=values)) +
labs(x="Array", y="Median of RLE") +
theme_bw()
ggsave("ArrayQuality.png", pt)
install.packages("plotly")
library(plotly, quietly = T)
library(plotly, quietly = T)
library(magrittr)
library(plotly, quietly = T)
library(magrittr)
library(plotly, quietly = T)
setwd("C:/Users/isoch/Google 云端硬盘/Study/1. Semester an Uni-Tuebingen/Microarray Bioinformatik/HA3")
AQ <- read.delim("ArrayQuality.tsv")
splitted <- split(AQ, AQ$Identifier)
RLE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
med <- apply(dt, 1, median)
res <- dt - med
}, simplify = F)
IQR <- sapply(names(splitted), function(n) {
dt <- RLE[[n]]
quantiles <- apply(dt, 2, quantile)
iqr <- quantiles[4,] - quantiles[2,]
}) %>% t
MED <- sapply(names(splitted), function(n) {
dt <- RLE[[n]]
med <- apply(dt, 2, median)
}) %>% t
# plot
MED = data.frame(MED)
MED.stack <- stack(MED)
pt <- ggplot(MED.stack) +
geom_boxplot(aes(x=ind, y=values)) +
labs(x="Array", y="Median of RLE") +
theme_bw()
ggsave("ArrayQuality.png", pt)
View(IQR)
library(magrittr)
library(plotly, quietly = T)
setwd("C:/Users/isoch/Google 云端硬盘/Study/1. Semester an Uni-Tuebingen/Microarray Bioinformatik/HA3")
AQ <- read.delim("ArrayQuality.tsv")
splitted <- split(AQ, AQ$Identifier)
RLE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
med <- apply(dt, 1, median)
res <- dt - med
}, simplify = F)
IQR <- sapply(names(splitted), function(n) {
dt <- RLE[[n]]
quantiles <- apply(dt, 2, quantile)
iqr <- quantiles[4,] - quantiles[2,]
}) %>% t
MED <- sapply(names(splitted), function(n) {
dt <- RLE[[n]]
med <- apply(dt, 2, median)
}) %>% t
# plot
MED = data.frame(MED)
MED.stack <- stack(MED)
pt <- ggplot(MED.stack) +
geom_boxplot(aes(x=ind, y=values)) +
labs(x="Array", y="Median of RLE") +
theme_bw()
ggsave("ArrayQuality.png", pt)
View(splitted)
View(RLE)
library(httr)
r <- GET("http://httpbin.org/get")
install.packages("httr")
library(httr)
library(magrittr)
library(plotly, quietly = T)
install.packages("httr")
library(httr)
library(magrittr)
library(plotly, quietly = T)
setwd("C:/Users/isoch/Google 云端硬盘/Study/1. Semester an Uni-Tuebingen/Microarray Bioinformatik/HA3")
AQ <- read.delim("ArrayQuality.tsv")
splitted <- split(AQ, AQ$Identifier)
RLE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
med <- apply(dt, 1, median)
res <- dt - med
}, simplify = F)
IQR <- sapply(names(splitted), function(n) {
dt <- RLE[[n]]
quantiles <- apply(dt, 2, quantile)
iqr <- quantiles[4,] - quantiles[2,]
}) %>% t
MED <- sapply(names(splitted), function(n) {
dt <- RLE[[n]]
med <- apply(dt, 2, median)
}) %>% t
# plot
MED = data.frame(MED)
MED.stack <- stack(MED)
pt <- ggplot(MED.stack) +
geom_boxplot(aes(x=ind, y=values)) +
labs(x="Array", y="Median of RLE") +
theme_bw()
ggsave("ArrayQuality.png", pt)
library(httr)
library(magrittr)
library(plotly, quietly = T)
setwd("C:/Users/isoch/Google 云端硬盘/Study/1. Semester an Uni-Tuebingen/Microarray Bioinformatik/HA3")
AQ <- read.delim("ArrayQuality.tsv")
splitted <- split(AQ, AQ$Identifier)
RLE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
med <- apply(dt, 1, median)
res <- dt - med
}, simplify = F)
IQR <- sapply(names(splitted), function(n) {
dt <- RLE[[n]]
quantiles <- apply(dt, 2, quantile)
iqr <- quantiles[4,] - quantiles[2,]
}) %>% t
MED <- sapply(names(splitted), function(n) {
dt <- RLE[[n]]
med <- apply(dt, 2, median)
}) %>% t
# plot
MED = data.frame(MED)
MED.stack <- stack(MED)
pt <- ggplot(MED.stack) +
geom_boxplot(aes(x=ind, y=values)) +
labs(x="Array", y="Median of RLE") +
theme_bw()
ggsave("ArrayQuality.png", pt)
setwd("C:/Users/isoch/Google 云端硬盘/Study/1. Semester an Uni-Tuebingen/Microarray Bioinformatik/HA3")
Pe <- as.data.frame(read.table("probeExp.tsv", header = TRUE, row.names = NULL))
Pe
View(Pe)
splitted <- split(Pe, Pe$row.names)
View(splitted)
splitted[,-1]
medianPe <- aggregate(Pe[,-1], list(Pe[,1]), median)
View(medianPe)
# Calculate Variance of each gene across all experiments
varPe <- apply(medianPe, 1, var)
# Calculate Variance of each gene across all experiments
varPe <- apply(medianPe[,-1], 1, var)
varPe
matrix(varPe, nrow = 1, ncol = 499)
matrix(varPe, nrow = 499, ncol = 1, byrow = TRUE)
# Making results into a matrix
Mvar <- matrix(varPe, nrow = 499, ncol = 1, byrow = TRUE)
View(Mvar)
cbind(Mvar, medianPe)
R <- cbind(Mvar, medianPe)
View(R)
R <- cbind(medianPe[,1], Mvar)
View(Mvar)
View(R)
View(R)
View(R)
View(R)
VaR <- cbind(medianPe[,1], Mvar)
View(VaR)
write.table(VaR, file='Variance.tsv', quote=FALSE, sep='\t', col.names = NA)
library(httr)
library(magrittr)
library(plotly, quietly = T)
setwd("C:/Users/isoch/Google 云端硬盘/Study/1. Semester an Uni-Tuebingen/Microarray Bioinformatik/HA3")
AQ <- read.delim("ArrayQuality.tsv")
splitted <- split(AQ, AQ$Identifier)
RLE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
med <- apply(dt, 1, median)
res <- dt - med
}, simplify = F)
IQR <- sapply(names(splitted), function(n) {
dt <- RLE[[n]]
quantiles <- apply(dt, 2, quantile)
iqr <- quantiles[4,] - quantiles[2,]
}) %>% t
MED <- sapply(names(splitted), function(n) {
dt <- RLE[[n]]
med <- apply(dt, 2, median)
}) %>% t
# plot
MED = data.frame(MED)
MED.stack <- stack(MED)
pt <- ggplot(MED.stack) +
geom_boxplot(aes(x=ind, y=values)) +
labs(x="Array", y="Median of RLE") +
theme_bw()
ggsave("ArrayQuality.png", pt)
View(splitted)
View(AQ)
sd([1,2,1,2])
sd(1:4)
sd(1:2)
1:@
1:2
?sd
splitted$GID4000
# NUSE
NUSE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 1, sd)
l <- apply(dt, 1, length)
SE <- sd / sqrt(l)
MEDSE <- apply(SE, 1, median)
Nuse <- SE / MEDSE
}, simplify = F)
# NUSE
NUSE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 1, sd)
l <- apply(dt, 1, length)
SE <- sd / sqrt(l)
MEDSE <- apply(SE[,-1], 1, median)
Nuse <- SE / MEDSE
}, simplify = F)
NUSE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 1, sd)
l <- apply(dt, 1, length)
SE <- sd / sqrt(l)
}, simplify = F)
View(NUSE)
NUSE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 2, sd) #求列的标准差
l <- apply(dt, 2, length)
SE <- sd / sqrt(l)
MEDSE <- apply(SE, 1, median)
Nuse <- SE / MEDSE
}, simplify = F)
NUSE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 2, sd) #求列的标准差
l <- apply(dt, 2, length)
SE <- sd / sqrt(l)
}, simplify = F)
View(NUSE)
NUSE$GID4000
MEDSE <- apply(SE, 1, median)
NUSE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 2, sd) #求列的标准差
l <- apply(dt, 2, length)
SE <- sd / sqrt(l)
MEDSE <- apply(SE, 1, median)
}, simplify = F)
# NUSE
NUSE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 2, sd) #求列的标准差
l <- apply(dt, 2, length)
SE <- sd / sqrt(l)
return(SE)
}, simplify = F)
SE
# NUSE
NUSE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 2, sd) #求列的标准差
l <- apply(dt, 2, length)
SE <- sd / sqrt(l)
return(SE)
}, simplify = F)
View(NUSE)
NUSE
NUSE$GID4000
apply(NUSE$GID4000, 1, median)
dim(NUSE)
splitted$GID4000
?NUSE
?nuse
is.matrix(splitted$GID4000)
SE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 2, sd) #求列的标准差
l <- apply(dt, 2, length)
SE <- sd / sqrt(l)
return(SE)
}, simplify = F)
View(SE)
SE$GID4000
NUSE <- sapply(names(splitted), function(n) {
dt <- SE[[n]]
med2 <- apply(dt, 1, median)
NUSE <- dt / med2
}) %>% t
View(RLE)
RLE$GID4000
SE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 2, sd) #求列的标准差
l <- apply(dt, 2, length)
}, simplify = F)
View(SE)
SE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 2, sd) #求列的标准差
l <- apply(dt, 2, length)
return(l)
}, simplify = F)
View(SE)
library(httr)
library(magrittr)
library(plotly, quietly = T)
setwd("C:/Users/isoch/Google 云端硬盘/Study/1. Semester an Uni-Tuebingen/Microarray Bioinformatik/HA3")
AQ <- read.delim("ArrayQuality.tsv")
splitted <- split(AQ, AQ$Identifier)
# RLE
RLE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
med <- apply(dt, 1, median)
res <- dt - med
}, simplify = F)
IQR <- sapply(names(splitted), function(n) {
dt <- RLE[[n]]
quantiles <- apply(dt, 2, quantile)
iqr <- quantiles[4,] - quantiles[2,]
}) %>% t
MED <- sapply(names(splitted), function(n) {
dt <- RLE[[n]]
med <- apply(dt, 2, median)
}) %>% t
# plot
MED = data.frame(MED)
MED.stack <- stack(MED)
pt <- ggplot(MED.stack) +
geom_boxplot(aes(x=ind, y=values)) +
labs(x="Array", y="Median of RLE") +
theme_bw()
ggsave("ArrayQuality.png", pt)
# NUSE
SE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 2, sd) #求列的标准差
l <- apply(dt, 2, length)
}, simplify = F)
View(SE)
SE$GID4000
SE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 2, sd) #求列的标准差
}, simplify = F)
View(SE)
View(SE)
View(SE)
View(SE)
View(SE)
library(httr)
library(magrittr)
library(plotly, quietly = T)
setwd("C:/Users/isoch/Google 云端硬盘/Study/1. Semester an Uni-Tuebingen/Microarray Bioinformatik/HA3")
AQ <- read.delim("ArrayQuality.tsv")
splitted <- split(AQ, AQ$Identifier)
# RLE
RLE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
med <- apply(dt, 1, median)
res <- dt - med
}, simplify = F)
IQR <- sapply(names(splitted), function(n) {
dt <- RLE[[n]]
quantiles <- apply(dt, 2, quantile)
iqr <- quantiles[4,] - quantiles[2,]
}) %>% t
MED <- sapply(names(splitted), function(n) {
dt <- RLE[[n]]
med <- apply(dt, 2, median)
}) %>% t
# plot
MED = data.frame(MED)
MED.stack <- stack(MED)
pt <- ggplot(MED.stack) +
geom_boxplot(aes(x=ind, y=values)) +
labs(x="Array", y="Median of RLE") +
theme_bw()
ggsave("ArrayQuality.png", pt)
# NUSE
SE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 2, sd) #求列的标准差
}, simplify = F)
View(SE)
NUSE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 2, sd)
len <- apply(dt, 2, length)
se <- matrix(sd / len, nrow = 1, ncol = 5, colnames(A1, A2, A3, A4, A5))
medse <- apply(se, 1, median)
nuse <- se / medse
}, simplify = F)
NUSE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 2, sd)
len <- apply(dt, 2, length)
se <- matrix(sd / len, nrow = 1, ncol = 5)
medse <- apply(se, 1, median)
nuse <- se / medse
}, simplify = F)
View(NUSE)
NUSEframe <- data.frame(NUSE)
pt2 <- ggplot(NUSE) +
geom_boxplot(aes(x=ind, y=values)) +
labs(x="Array", y="Median of NUSE") +
theme_bw()
ggsave("ArrayQuality2.png", pt2)
library(httr)
library(magrittr)
library(plotly, quietly = T)
NUSEframe <- data.frame(NUSE)
pt2 <- ggplot(NUSE) +
geom_boxplot(aes(x=ind, y=values)) +
labs(x="Array", y="Median of NUSE") +
theme_bw()
ggsave("ArrayQuality2.png", pt2)
NUSE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 2, sd)
len <- apply(dt, 2, length)
se <- matrix(sd / len, nrow = 1, ncol = 5)
medse <- apply(se, 1, median)
nuse <- se / medse
}, simplify = T)
View(NUSE)
t_NUSE <- t(NUSE)
View(t_NUSE)
# NUSE Calculate
NUSE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 2, sd)
len <- apply(dt, 2, length)
se <- matrix(sd / len, nrow = 1, ncol = 5)
medse <- apply(se, 1, median)
nuse <- se / medse
}, simplify = T)
t_NUSE <- t(NUSE)
NUSEframe <- data.frame(t_NUSE)
NUSE.stack <- stack(NUSEframe)
pt2 <- ggplot(NUSE.stack) +
geom_boxplot(aes(x=ind, y=values)) +
labs(x="Array", y="Median of NUSE") +
theme_bw()
ggsave("ArrayQuality2.png", pt2)
View(NUSEframe)
NUSE <- sapply(names(splitted), function(n) {
dt <- splitted[[n]][,-1]
sd <- apply(dt, 2, sd)
len <- apply(dt, 2, length)
se <- matrix(sd / len, nrow = 1, ncol = 5)
medse <- apply(se, 1, median)
nuse <- se / medse
}, simplify = T)
rownames(NUSE) = c("A1", "A2", "A3", "A4", "A5")
View(NUSE)
t_NUSE <- t(NUSE)
NUSEframe <- data.frame(t_NUSE)
NUSE.stack <- stack(NUSEframe)
# Plot
pt2 <- ggplot(NUSE.stack) +
geom_boxplot(aes(x=ind, y=values)) +
labs(x="Array", y="Median of NUSE") +
theme_bw()
ggsave("ArrayQuality2.png", pt2)
